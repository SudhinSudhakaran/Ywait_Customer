require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios,'13.0'
prepare_react_native_project!
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end
# Flags change depending on the env values.
flags = get_default_flags()

target 'YwaitCustomerRN' do
  config = use_native_modules!
  permissions_path = '../node_modules/react-native-permissions/ios'
  use_react_native!(
    :path => config[:reactNativePath],
 #  Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

pod 'FirebaseCoreInternal', :modular_headers => true
pod 'FirebaseSessions'
pod 'FirebaseCoreExtension', :modular_headers => true
pod 'GoogleUtilities', :modular_headers => true
pod 'FirebaseCore', :modular_headers => true
pod 'FirebaseInstallations', :modular_headers => true
pod 'GoogleDataTransport', :modular_headers => true
pod 'nanopb', :modular_headers => true
pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
pod 'react-native-fbsdk-next', :path => '../node_modules/react-native-fbsdk-next'
  target 'YwaitCustomerRNTests' do
    inherit! :complete
    # Pods for testing
  end
  
  target 'Skillikz' do
      inherit! :complete
    end
  
  target 'PrinceCourt' do
      inherit! :complete
    end
  target 'YwaitDemo' do
      inherit! :complete
    end
  target 'Aster' do
      inherit! :complete
    end
  target 'YwaitServices' do
      inherit! :complete
    end
 

    post_install do |installer|
      react_native_post_install(
        installer,
        # Set `mac_catalyst_enabled` to `true` in order to apply patches
        # necessary for Mac Catalyst builds
        :mac_catalyst_enabled => false
      )
        __apply_Xcode_12_5_M1_post_install_workaround(installer)
        installer.pods_project.targets.each do |target|
          if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
            target.build_configurations.each do |config|
              config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
            end
          end
        end
      end
    end
